// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@import 'variables/palette';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette($ds-primary-material, 400);
$frontend-accent: mat.define-palette(mat.$green-palette, A400);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);

$my-typography: mat.define-typography-config($font-family: 'Space Grotesk',
  );
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme((color: (primary: $frontend-primary,
        accent: $frontend-accent,
        warn: $frontend-warn,
      ),
      typography: $my-typography,
    ));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

:root {

  --gap-small: 15px;
  --gap-medium: 20px;
  --gap-big: 25px;
}

/* You can add global styles to this file, and also import other style files */
* {
  box-sizing: border-box !important;
  padding: 0;
  margin: 0;
}

*:not(.material-icons) {
  font-family: 'Space Grotesk', sans-serif !important; // Dlatego, żeby działały ikonki, bo inaczej material wariuje
}

html,
body {
  min-height: 100%;
  background-color: map-get($map: $ds-utils, $key: background-color);
  color: map-get($map: $ds-utils, $key: font-color);
  font-family: 'Space Grotesk', sans-serif;
  overflow-x: hidden;
}

body {
  margin: 0;
  // font-family: 'Space Grotesk', sans-serif;
  font-size: 14px;
}

.cursor-pointer {
  cursor: pointer;
}

a {
  margin-bottom: 5px;
  color: var(--color-primary);

  &:visited {
    color: var(--color-primary);
  }
}

*::-webkit-scrollbar {
  width: 8px;
  /* width of the entire scrollbar */
}

*::-webkit-scrollbar-track {
  background: transparent;
  /* color of the tracking area */
}

*::-webkit-scrollbar-thumb {
  background-color: #393d45;
  /* color of the scroll thumb */
  border-radius: 20px;
  /* roundness of the scroll thumb */
  /* creates padding around scroll thumb */
}

.mat-mdc-snack-bar-container {
  &.error-snackbar {
    --mdc-snackbar-container-color: var(--color-error);
    --mat-mdc-snack-bar-button-color: #fff;
    --mdc-snackbar-supporting-text-color: #fff;
  }

  &.success-snackbar {
    --mdc-snackbar-container-color: var(--color-success);
    --mat-mdc-snack-bar-button-color: #fff;
    --mdc-snackbar-supporting-text-color: #fff;
  }
}

.mat-mdc-raised-button:not(:disabled) {
  color: white !important;
}


//directive-styles
@import 'components/button';
@import 'components/card';
@import 'components/cut-corner';